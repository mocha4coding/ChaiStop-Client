{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\AuthModal.js\",\n    _s = $RefreshSig$();\n\nimport AuthInput from \"./AuthInput\";\nimport AuthButton from './AuthButton';\nimport { useState, useContext } from 'react';\nimport axios from \"axios\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport UserContext from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthModal(props) {\n  _s();\n\n  const [modalType, setModalType] = useState('login');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorBody, setErrorBody] = useState('');\n  const modalContext = useContext(AuthModalContext);\n  const user = useContext(UserContext);\n  const visibleClass = modalContext.show !== false ? 'block' : 'hidden';\n\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n\n  function register(e) {\n    e.preventDefault();\n    const data = {\n      email,\n      username,\n      password\n    };\n\n    if (password.length < 8) {\n      setErrorBody('Password should be atleast 8 characters long');\n    } else {\n      axios.post('https://chai-stop-server.herokuapp.com/register', data, {\n        withCredentials: true\n      }).then(response => {\n        user.setUser({\n          username\n        });\n        modalContext.setShow(false);\n        setEmail('');\n        setPassword('');\n        setUsername('');\n      }).catch(error => {\n        setErrorBody('Username already exists.Try a different one.');\n      });\n    }\n  }\n\n  function login() {\n    const data = {\n      username,\n      password\n    };\n    axios.post('https://chai-stop-server.herokuapp.com/login', data, {\n      withCredentials: true\n    }).then(() => {\n      modalContext.setShow(false);\n      user.setUser({\n        username\n      });\n    }).catch(error => {\n      setErrorBody('Incorrect username or password');\n    });\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen  fixed top-0 bottom-0 left-0 z-20 flex \" + visibleClass,\n    style: {\n      backgroundColor: 'rgba(0,0,0,0.95)'\n    },\n    children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n      onClickOut: () => modalContext.setShow(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4/5 sm:w-1/3  border border-theme_dark rounded-md bg-white p-5 text-theme_dark  mx-auto self-center align-middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-700\",\n            children: errorBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), modalType === 'login' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl mb-3\",\n            children: \" Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl mb-3\",\n            children: \" Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(AuthInput, {\n              type: \"email\",\n              className: \"mb-2 w-full \",\n              placeholder: \"email (Eg: abc@xyz.com)\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(AuthInput, {\n            type: \"text\",\n            className: \"mb-2 w-full \",\n            placeholder: \"username (Eg: MOni_4)\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(AuthInput, {\n            type: \"password\",\n            className: \"mb-4 w-full \",\n            placeholder: \"password (Eg: xyz1234)\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), modalType === 'login' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AuthButton, {\n            outline: true,\n            className: \"w-full \",\n            onClick: () => login(),\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"font-bold\",\n              onClick: () => {\n                modalContext.setShow('register');\n                setErrorBody('');\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AuthButton, {\n            outline: true,\n            className: \"w-full \",\n            onClick: e => register(e),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"font-bold\",\n              onClick: () => {\n                modalContext.setShow('login');\n                setErrorBody('');\n              },\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthModal, \"9DpRyDyj5TLNLgllmUnNTrYV4uA=\");\n\n_c = AuthModal;\nexport default AuthModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/AuthModal.js"],"names":["AuthInput","AuthButton","useState","useContext","axios","AuthModalContext","ClickOutHandler","UserContext","AuthModal","props","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","errorBody","setErrorBody","modalContext","user","visibleClass","show","register","e","preventDefault","data","length","post","withCredentials","then","response","setUser","setShow","catch","error","login","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import AuthInput from \"./AuthInput\";\r\nimport AuthButton from './AuthButton';\r\nimport {useState, useContext} from 'react';\r\nimport axios from \"axios\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from 'react-clickout-handler';\r\nimport UserContext from \"./UserContext\";\r\n\r\nfunction AuthModal(props){\r\n    const [modalType, setModalType] = useState('login');\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    \r\n    const [errorBody, setErrorBody] = useState('')\r\n    const modalContext = useContext(AuthModalContext);\r\n    const user = useContext(UserContext);\r\n\r\n    const visibleClass = modalContext.show !== false ? 'block' : 'hidden';\r\n\r\n    if(modalContext.show && modalContext.show !== modalType) {\r\n        setModalType(modalContext.show);\r\n    }\r\n\r\n    function register(e){\r\n       \r\n        e.preventDefault();\r\n        const data = {email, username, password};\r\n        if(password.length < 8 )\r\n        {\r\n            setErrorBody('Password should be atleast 8 characters long');\r\n        }\r\n        else\r\n        {\r\n        axios.post('https://chai-stop-server.herokuapp.com/register', data, {withCredentials:true})\r\n        .then((response) => {\r\n            \r\n           \r\n            user.setUser({username});\r\n            modalContext.setShow(false);\r\n            setEmail('');\r\n            setPassword('');\r\n            setUsername('');\r\n          })\r\n          .catch((error) =>{\r\n            \r\n             setErrorBody('Username already exists.Try a different one.');\r\n          });\r\n        }\r\n    }\r\n\r\n    function login() {\r\n        \r\n        const data = {username,password};\r\n        axios.post('https://chai-stop-server.herokuapp.com/login', data, {withCredentials:true})\r\n        .then(() => {\r\n            modalContext.setShow(false);\r\n            user.setUser({username})\r\n          })\r\n        .catch((error) =>{\r\n           \r\n            setErrorBody('Incorrect username or password');\r\n         });\r\n        ;\r\n      }\r\n    \r\n    return (\r\n        <div className = {\"w-screen h-screen  fixed top-0 bottom-0 left-0 z-20 flex \" + visibleClass} style = {{backgroundColor:'rgba(0,0,0,0.95)'}}>\r\n           <ClickOutHandler onClickOut={() => modalContext.setShow(false)}>\r\n\r\n           \r\n                <div className = \"w-4/5 sm:w-1/3  border border-theme_dark rounded-md bg-white p-5 text-theme_dark  mx-auto self-center align-middle\">\r\n\r\n                \r\n                        <div className = \"\"><span className = \"text-red-700\">{errorBody}</span></div>\r\n               \r\n                {modalType === 'login' && (\r\n                \r\n                    <div>\r\n                        <h1 className = \"text-2xl mb-3\" > Login</h1>\r\n                    </div>)\r\n                }\r\n                {modalType === 'register' && (\r\n                \r\n                    <div>\r\n                        <h1 className = \"text-2xl mb-3\"> Register</h1>\r\n                        <label>\r\n                            Email\r\n                            <AuthInput type = \"email\" className = \"mb-2 w-full \" placeholder = \"email (Eg: abc@xyz.com)\" value = {email} onChange = {e => setEmail(e.target.value)} />\r\n                        </label>\r\n                    </div>)\r\n                }\r\n                <label>\r\n                Username\r\n                <AuthInput type = \"text\" className = \"mb-2 w-full \" placeholder = \"username (Eg: MOni_4)\" value = {username} onChange = {e => setUsername(e.target.value)} />\r\n                </label>\r\n\r\n                <label>\r\n                Password\r\n                <AuthInput type = \"password\" className = \"mb-4 w-full \" placeholder = \"password (Eg: xyz1234)\" value = {password} onChange = {e => setPassword(e.target.value)} />\r\n                </label>\r\n\r\n\r\n                {modalType === 'login' && (\r\n                \r\n                    <div>\r\n                        <AuthButton outline className = \"w-full \" onClick = {() => login()}>Log In</AuthButton>\r\n                        <div>\r\n                            Don't have an account? <button className = \"font-bold\" onClick={() => {modalContext.setShow('register'); setErrorBody('');}}>Sign Up</button>\r\n                        </div>\r\n                    </div>)\r\n                }\r\n                {modalType === 'register' && (\r\n                \r\n                    <div>\r\n                        <AuthButton outline className = \"w-full \" onClick = {e => register(e)}>Sign Up</AuthButton>\r\n                        <div>\r\n                            Already have an account? <button className = \"font-bold\" onClick={() => {modalContext.setShow('login'); setErrorBody(''); }}>Log In</button>\r\n                        </div>\r\n                    </div>)\r\n                }\r\n                </div>\r\n            </ClickOutHandler>\r\n        </div>\r\n    );\r\n}\r\nexport default AuthModal;"]},"metadata":{},"sourceType":"module"}