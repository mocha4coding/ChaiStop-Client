{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar pico = require('picocolors');\n\nvar terminalHighlight = require('./terminal-highlight');\n\nvar CssSyntaxError = /*#__PURE__*/function (_Error) {\n  _inherits(CssSyntaxError, _Error);\n\n  var _super = _createSuper(CssSyntaxError);\n\n  function CssSyntaxError(message, line, column, source, file, plugin) {\n    var _this;\n\n    _classCallCheck(this, CssSyntaxError);\n\n    _this = _super.call(this, message);\n    _this.name = 'CssSyntaxError';\n    _this.reason = message;\n\n    if (file) {\n      _this.file = file;\n    }\n\n    if (source) {\n      _this.source = source;\n    }\n\n    if (plugin) {\n      _this.plugin = plugin;\n    }\n\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      _this.line = line;\n      _this.column = column;\n    }\n\n    _this.setMessage();\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);\n    }\n\n    return _this;\n  }\n\n  _createClass(CssSyntaxError, [{\n    key: \"setMessage\",\n    value: function setMessage() {\n      this.message = this.plugin ? this.plugin + ': ' : '';\n      this.message += this.file ? this.file : '<css input>';\n\n      if (typeof this.line !== 'undefined') {\n        this.message += ':' + this.line + ':' + this.column;\n      }\n\n      this.message += ': ' + this.reason;\n    }\n  }, {\n    key: \"showSourceCode\",\n    value: function showSourceCode(color) {\n      var _this2 = this;\n\n      if (!this.source) return '';\n      var css = this.source;\n      if (color == null) color = pico.isColorSupported;\n\n      if (terminalHighlight) {\n        if (color) css = terminalHighlight(css);\n      }\n\n      var lines = css.split(/\\r?\\n/);\n      var start = Math.max(this.line - 3, 0);\n      var end = Math.min(this.line + 2, lines.length);\n      var maxWidth = String(end).length;\n      var mark, aside;\n\n      if (color) {\n        var _pico$createColors = pico.createColors(true),\n            bold = _pico$createColors.bold,\n            red = _pico$createColors.red,\n            gray = _pico$createColors.gray;\n\n        mark = function mark(text) {\n          return bold(red(text));\n        };\n\n        aside = function aside(text) {\n          return gray(text);\n        };\n      } else {\n        mark = aside = function aside(str) {\n          return str;\n        };\n      }\n\n      return lines.slice(start, end).map(function (line, index) {\n        var number = start + 1 + index;\n        var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n\n        if (number === _this2.line) {\n          var spacing = aside(gutter.replace(/\\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\\t]/g, ' ');\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^');\n        }\n\n        return ' ' + aside(gutter) + line;\n      }).join('\\n');\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var code = this.showSourceCode();\n\n      if (code) {\n        code = '\\n\\n' + code + '\\n';\n      }\n\n      return this.name + ': ' + this.message + code;\n    }\n  }]);\n\n  return CssSyntaxError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nmodule.exports = CssSyntaxError;\nCssSyntaxError.default = CssSyntaxError;","map":{"version":3,"sources":["E:/ENGAGE/practice/client/node_modules/purgecss/node_modules/postcss/lib/css-syntax-error.js"],"names":["pico","require","terminalHighlight","CssSyntaxError","message","line","column","source","file","plugin","name","reason","setMessage","Error","captureStackTrace","color","css","isColorSupported","lines","split","start","Math","max","end","min","length","maxWidth","String","mark","aside","createColors","bold","red","gray","text","str","slice","map","index","number","gutter","spacing","replace","join","code","showSourceCode","module","exports","default"],"mappings":"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","sourcesContent":["'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      this.line = line\n      this.column = column\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n"]},"metadata":{},"sourceType":"script"}