{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './style.css'; //import Header from './Header'\n//import AuthModal from './AuthModal';\n\nimport AuthModalContext from './AuthModalContext';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport UserContext from './UserContext';\nimport Routing from './Routing'; //import CreateThreadModal from './CreateThreadModal';\n\nimport CreateThreadModalContext from './CreateThreadModalContext'; //import Thread from './Thread';\n// import {\n//   Routes, \n//   Route,\n//   useLocation,\n//   BrowserRouter as Router,\n// } from 'react-router-dom';\n// import SubForum from './SubForum';\n// import ThreadPage from './ThreadPage';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [user, setUser] = useState({});\n  const [showCreateThreadModal, setShowCreateThreadModal] = useState(false); // const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/user', {\n      withCredentials: true\n    }).then(response => setUser(response.data)); // axios.get('http://localhost:4000/postthread', {withCredentials:true})\n    // .then(response => setPosts(response.data));\n  }, []);\n\n  function logout() {\n    axios.post('http://localhost:4000/logout', {}, {\n      withCredentials: true\n    }).then(() => setUser({}));\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthModalContext.Provider, {\n    value: {\n      show: showAuthModal,\n      setShow: setShowAuthModal\n    },\n    children: /*#__PURE__*/_jsxDEV(CreateThreadModalContext.Provider, {\n      value: {\n        show: showCreateThreadModal,\n        setShow: setShowCreateThreadModal\n      },\n      children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: { ...user,\n          logout,\n          setUser\n        },\n        children: /*#__PURE__*/_jsxDEV(Routing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YodtpAwV5TNJp0RZglBW45O7FHw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/App.js"],"names":["AuthModalContext","useState","useEffect","axios","UserContext","Routing","CreateThreadModalContext","App","showAuthModal","setShowAuthModal","user","setUser","showCreateThreadModal","setShowCreateThreadModal","get","withCredentials","then","response","data","logout","post","show","setShow"],"mappings":";;;AACA,OAAO,aAAP,C,CACA;AAEA;;AACA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,wBAAP,MAAqC,4BAArC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCR,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,qBAAD,EAAwBC,wBAAxB,IAAoDZ,QAAQ,CAAC,KAAD,CAAlE,CAHa,CAIb;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACW,GAAN,CAAU,4BAAV,EAAwC;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAxC,EACCC,IADD,CACMC,QAAQ,IAAIN,OAAO,CAACM,QAAQ,CAACC,IAAV,CADzB,EADc,CAId;AACA;AAED,GAPQ,EAON,EAPM,CAAT;;AAWA,WAASC,MAAT,GAAiB;AACfhB,IAAAA,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA2C,EAA3C,EAA+C;AAACL,MAAAA,eAAe,EAAE;AAAlB,KAA/C,EACCC,IADD,CACM,MAAML,OAAO,CAAC,EAAD,CADnB;AAED;;AAMD,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAI;AAACU,MAAAA,IAAI,EAAEb,aAAP;AAAsBc,MAAAA,OAAO,EAAEb;AAA/B,KAApC;AAAA,2BACC,QAAC,wBAAD,CAA0B,QAA1B;AAAmC,MAAA,KAAK,EAAI;AAACY,QAAAA,IAAI,EAAET,qBAAP;AAA8BU,QAAAA,OAAO,EAAET;AAAvC,OAA5C;AAAA,6BACC,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAI,EAAC,GAAGH,IAAJ;AAAUS,UAAAA,MAAV;AAAkBR,UAAAA;AAAlB,SAA/B;AAAA,+BASE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GArDQJ,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["\nimport './style.css';\n//import Header from './Header'\n\n//import AuthModal from './AuthModal';\nimport AuthModalContext from './AuthModalContext';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport UserContext from './UserContext';\nimport Routing from './Routing';\n//import CreateThreadModal from './CreateThreadModal';\nimport CreateThreadModalContext from './CreateThreadModalContext';\n//import Thread from './Thread';\n// import {\n//   Routes, \n//   Route,\n//   useLocation,\n//   BrowserRouter as Router,\n// } from 'react-router-dom';\n\n// import SubForum from './SubForum';\n// import ThreadPage from './ThreadPage';\n\n\n\n\nfunction App() {\n  const [showAuthModal,setShowAuthModal] = useState(false);\n  const [user, setUser] = useState({});\n  const [showCreateThreadModal, setShowCreateThreadModal] = useState(false);\n  // const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/user', {withCredentials:true})\n    .then(response => setUser(response.data));\n\n    // axios.get('http://localhost:4000/postthread', {withCredentials:true})\n    // .then(response => setPosts(response.data));\n\n  }, []);\n\n\n\n  function logout(){\n    axios.post('http://localhost:4000/logout', {}, {withCredentials: true})\n    .then(() => setUser({}));\n  }\n\n\n\n \n\n  return (\n    <AuthModalContext.Provider value = {{show: showAuthModal, setShow: setShowAuthModal}}>\n     <CreateThreadModalContext.Provider value = {{show: showCreateThreadModal, setShow: setShowCreateThreadModal}}>\n      <UserContext.Provider value = {{...user, logout, setUser}}>  \n        \n        {/* <Router>\n        <Header/>  \n          <Routes>\n            <Route exact path = \"/\" element = {<SubForum/>}/> \n            <Route exact path = {\"/posts/:id\"} element = {<ThreadPage/>}/> \n          </Routes>\n        </Router>  */}\n        <Routing/>\n        \n        \n        {/* <PostsListing/> */}\n        \n        \n        \n        \n       \n\n        \n      </UserContext.Provider>\n      </CreateThreadModalContext.Provider>\n    </AuthModalContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}