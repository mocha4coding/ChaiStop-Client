{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport ThreadTextEditor from \"./ThreadTextEditor\";\nimport UserContext from \"./UserContext\";\nimport AuthButton from \"./AuthButton\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm(props) {\n  _s();\n\n  const user = useContext(UserContext);\n  const [CommentBody, setCommentBody] = useState('');\n\n  function postComment(e) {\n    e.preventDefault();\n    const data = {\n      body: CommentBody,\n      parentId: props.parentId,\n      rootId: props.rootId\n    };\n    axios.post(\"http://localhost:4000/postcomment\", data, {\n      withCredentials: true\n    }).then(response => {\n      setCommentBody('');\n\n      if (props.onSubmit) {\n        props.onSubmit();\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.showAuthor && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'text-theme_dark-alternateBright text-sm mb-2',\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"text-theme_dark font-bold text-sm\",\n        children: \"Comment as : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 82\n      }, this), user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => postComment(e),\n      children: [/*#__PURE__*/_jsxDEV(ThreadTextEditor, {\n        onChange: e => setCommentBody(e.target.value),\n        value: CommentBody,\n        placeholder: 'Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'text-right',\n        children: [!!props.onCancel && /*#__PURE__*/_jsxDEV(AuthButton, {\n          outline: true,\n          className: \"mr-1\",\n          onClick: e => props.onCancel(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-theme_dark\",\n            children: \"    Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n          className: \"mb-1 mr-1\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentForm, \"Pa4YILs2++f7F5ZU+G8nabzawlk=\");\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/CommentForm.js"],"names":["useContext","useState","ThreadTextEditor","UserContext","AuthButton","axios","CommentForm","props","user","CommentBody","setCommentBody","postComment","e","preventDefault","data","body","parentId","rootId","post","withCredentials","then","response","onSubmit","showAuthor","username","target","value","onCancel"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AACvB,QAAMC,IAAI,GAAGR,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASU,WAAT,CAAqBC,CAArB,EAAuB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAACC,MAAAA,IAAI,EAACN,WAAN;AAAmBO,MAAAA,QAAQ,EAACT,KAAK,CAACS,QAAlC;AAA4CC,MAAAA,MAAM,EAACV,KAAK,CAACU;AAAzD,KAAb;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,mCAAX,EAAgDJ,IAAhD,EAAqD;AAACK,MAAAA,eAAe,EAAE;AAAlB,KAArD,EACCC,IADD,CACMC,QAAQ,IAAI;AACdX,MAAAA,cAAc,CAAC,EAAD,CAAd;;AACA,UAAGH,KAAK,CAACe,QAAT,EAAkB;AACdf,QAAAA,KAAK,CAACe,QAAN;AACH;AACJ,KAND;AAOH;;AACD,sBACA;AAAA,eAEQf,KAAK,CAACgB,UAAN,iBACI;AAAG,MAAA,SAAS,EAAI,8CAAhB;AAAA,mCAAiE;AAAM,QAAA,KAAK,EAAG,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjE,EAAwIf,IAAI,CAACgB,QAA7I;AAAA;AAAA;AAAA;AAAA;AAAA,YAHZ,eAOI;AAAM,MAAA,QAAQ,EAAKZ,CAAD,IAAOD,WAAW,CAACC,CAAD,CAApC;AAAA,8BAEI,QAAC,gBAAD;AACI,QAAA,QAAQ,EAAIA,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CADnC;AAEI,QAAA,KAAK,EAAIjB,WAFb;AAGI,QAAA,WAAW,EAAI;AAHnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAI,YAAlB;AAAA,mBAEK,CAAC,CAACF,KAAK,CAACoB,QAAR,iBACG,QAAC,UAAD;AAAY,UAAA,OAAO,MAAnB;AACY,UAAA,SAAS,EAAG,MADxB;AAEY,UAAA,OAAO,EAAIf,CAAC,IAAIL,KAAK,CAACoB,QAAN,EAF5B;AAAA,iCAII;AAAM,YAAA,SAAS,EAAG,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAHR,eAYI,QAAC,UAAD;AACG,UAAA,SAAS,EAAG,WADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiCH;;GAhDQrB,W;;KAAAA,W;AAkDT,eAAeA,WAAf","sourcesContent":["import {useContext, useState} from \"react\";\r\nimport ThreadTextEditor from \"./ThreadTextEditor\";\r\nimport UserContext from \"./UserContext\"\r\nimport AuthButton from \"./AuthButton\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction CommentForm(props){\r\n    const user = useContext(UserContext);\r\n    const [CommentBody, setCommentBody] = useState('');\r\n\r\n    function postComment(e){\r\n        e.preventDefault();\r\n        const data = {body:CommentBody, parentId:props.parentId, rootId:props.rootId};\r\n        axios.post(\"http://localhost:4000/postcomment\", data,{withCredentials: true} )\r\n        .then(response => {\r\n            setCommentBody('');\r\n            if(props.onSubmit){\r\n                props.onSubmit();\r\n            }\r\n        });\r\n    }\r\n    return(\r\n    <div>\r\n        {\r\n            props.showAuthor && (\r\n                <p className = {'text-theme_dark-alternateBright text-sm mb-2'}> <span class = \"text-theme_dark font-bold text-sm\">Comment as : </span>{user.username}</p>\r\n            )\r\n        }\r\n        \r\n        <form onSubmit = {(e) => postComment(e)}>\r\n            \r\n            <ThreadTextEditor \r\n                onChange = {e => setCommentBody(e.target.value)}\r\n                value = {CommentBody}\r\n                placeholder = {'Comment'}/>\r\n            <div className = {'text-right'}>\r\n              \r\n                {!!props.onCancel && (\r\n                    <AuthButton outline \r\n                                className = \"mr-1\"\r\n                                onClick = {e => props.onCancel()}\r\n                    >\r\n                        <span className = \"text-theme_dark\">    Cancel </span>\r\n                    </AuthButton>\r\n                )\r\n\r\n                }\r\n                <AuthButton \r\n                   className = \"mb-1 mr-1\">\r\n                    Comment\r\n                </AuthButton>\r\n            </div>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}