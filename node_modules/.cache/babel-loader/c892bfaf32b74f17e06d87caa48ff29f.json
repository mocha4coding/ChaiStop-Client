{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\RoutingSwitch.js\",\n    _s = $RefreshSig$();\n\nimport SubForum from './SubForum'; //Board\n\nimport ThreadPage from './ThreadPage'; //CommentPage\n\nimport UserProfile from './UserProfile'; //user profile page\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport PostModal from './PostModal';\nimport SavedPosts from './SavedPosts';\nimport UpdateProfile from './UpdateProfile';\nimport HomePage from './HomePage';\nimport MyPosts from './MyPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoutingSwitch() {\n  _s();\n\n  let location = useLocation();\n  const [postOpen, setPostOpen] = useState(false); //console.log(location);    \n\n  let postId = null;\n\n  if (location.state && location.state.postId) {\n    location.pathname = '/';\n    postId = location.state.postId;\n  }\n\n  if (location.state && location.state.postId) {\n    location.pathname = '/';\n\n    if (postOpen) {\n      postId = location.state.postId;\n    } else {\n      location.state.postId = null;\n    }\n  } // If post is open we pass the post id\n\n\n  useEffect(() => {\n    setPostOpen(true);\n  }, [postId]); //If post is closed we want the post id to be null\n\n  useEffect(() => {\n    postId = null;\n  }, [postOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [postId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostModal, {\n        id: postId,\n        open: postOpen,\n        onClickOut: () => setPostOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      location: location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: SubForum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/home\",\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/posts/:id\",\n        component: ThreadPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/profile/:username\",\n        component: UserProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/profile/:username/update\",\n        component: UpdateProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/bookmarks/:username\",\n        component: SavedPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/myposts/:username\",\n        component: MyPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RoutingSwitch, \"bOtIifCNH2IrNHW6BuQjWu27uLc=\", false, function () {\n  return [useLocation];\n});\n\n_c = RoutingSwitch;\nexport default RoutingSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutingSwitch\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/RoutingSwitch.js"],"names":["SubForum","ThreadPage","UserProfile","useState","useEffect","Switch","Route","useLocation","PostModal","SavedPosts","UpdateProfile","HomePage","MyPosts","RoutingSwitch","location","postOpen","setPostOpen","postId","state","pathname"],"mappings":"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","sourcesContent":["import SubForum from './SubForum'; //Board\r\nimport ThreadPage from './ThreadPage'; //CommentPage\r\nimport UserProfile from './UserProfile';//user profile page\r\nimport {useState, useEffect} from \"react\";\r\nimport {\r\n    Switch, \r\n    Route,\r\n    useLocation,\r\n    \r\n  } from 'react-router-dom';\r\nimport PostModal from './PostModal';\r\nimport SavedPosts from './SavedPosts';\r\nimport UpdateProfile from './UpdateProfile';\r\nimport HomePage from './HomePage';\r\nimport MyPosts from './MyPosts';\r\n\r\nfunction RoutingSwitch(){\r\n    let location = useLocation();\r\n    const [postOpen, setPostOpen] = useState(false);\r\n    //console.log(location);    \r\n    let postId = null;\r\n\r\n\r\n    \r\n    if(location.state && location.state.postId){\r\n        location.pathname = '/';\r\n        postId = location.state.postId;\r\n    }\r\n    \r\n\r\n    if (location.state && location.state.postId) {\r\n        location.pathname = '/';\r\n        if (postOpen) {\r\n        postId = location.state.postId;\r\n        } else {\r\n        location.state.postId = null;\r\n        }\r\n\r\n    }\r\n\r\n    // If post is open we pass the post id\r\n    useEffect(() => {\r\n        setPostOpen(true);\r\n      }, [postId]);\r\n    \r\n\r\n    //If post is closed we want the post id to be null\r\n      useEffect(() => {\r\n        postId = null;\r\n      }, [postOpen]);\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n            {postId && (\r\n                    <div>\r\n\r\n                        <PostModal id = {postId} open = {postOpen} onClickOut = {() => setPostOpen(false)}/>\r\n                    </div>\r\n                )}\r\n            <Switch location = {location}>\r\n                \r\n                <Route exact path = \"/\" component ={SubForum} /> \r\n                <Route exact path = \"/home\" component = {HomePage}/> \r\n                <Route exact path = {\"/posts/:id\"} component = {ThreadPage}/> \r\n                <Route exact path = {\"/profile/:username\"} component = {UserProfile}/> \r\n                <Route exact path = {\"/profile/:username/update\"} component = {UpdateProfile}/> \r\n                <Route exact path = {\"/bookmarks/:username\"} component = {SavedPosts}/>\r\n                <Route exact path = {\"/myposts/:username\"} component = {MyPosts}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoutingSwitch;"]},"metadata":{},"sourceType":"module"}