{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\RoutingSwitch.js\",\n    _s = $RefreshSig$();\n\nimport SubForum from './SubForum'; //Board\n\nimport ThreadPage from './ThreadPage'; //CommentPage\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport PostModal from './PostModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoutingSwitch() {\n  _s();\n\n  let location = useLocation();\n  const [postOpen, setPostOpen] = useState(false); //console.log(location);    \n\n  let postId = null;\n\n  if (location.state && location.state.postId) {\n    location.pathname = '/';\n    postId = location.state.postId;\n  }\n\n  if (location.state && location.state.postId) {\n    location.pathname = '/';\n\n    if (postOpen) {\n      postId = location.state.postId;\n    } else {\n      location.state.postId = null;\n    }\n  } // If post is open we pass the post id\n\n\n  useEffect(() => {\n    setPostOpen(true);\n  }, [postId]); //If post is closed we want the post id to be null\n\n  useEffect(() => {\n    postId = null;\n  }, [postOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      location: location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: SubForum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/posts/:id\",\n        component: ThreadPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RoutingSwitch, \"bOtIifCNH2IrNHW6BuQjWu27uLc=\", false, function () {\n  return [useLocation];\n});\n\n_c = RoutingSwitch;\nexport default RoutingSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutingSwitch\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/RoutingSwitch.js"],"names":["SubForum","ThreadPage","useState","useEffect","Switch","Route","useLocation","PostModal","RoutingSwitch","location","postOpen","setPostOpen","postId","state","pathname"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB,C,CAAmC;;AACnC,OAAOC,UAAP,MAAuB,cAAvB,C,CAAuC;;AACvC,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,QAKS,kBALT;AAMA,OAAOC,SAAP,MAAsB,aAAtB;;;AAIA,SAASC,aAAT,GAAwB;AAAA;;AACpB,MAAIC,QAAQ,GAAGH,WAAW,EAA1B;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC,CAFoB,CAGpB;;AACA,MAAIU,MAAM,GAAG,IAAb;;AAIA,MAAGH,QAAQ,CAACI,KAAT,IAAkBJ,QAAQ,CAACI,KAAT,CAAeD,MAApC,EAA2C;AACvCH,IAAAA,QAAQ,CAACK,QAAT,GAAoB,GAApB;AACAF,IAAAA,MAAM,GAAGH,QAAQ,CAACI,KAAT,CAAeD,MAAxB;AACH;;AAGD,MAAIH,QAAQ,CAACI,KAAT,IAAkBJ,QAAQ,CAACI,KAAT,CAAeD,MAArC,EAA6C;AACzCH,IAAAA,QAAQ,CAACK,QAAT,GAAoB,GAApB;;AACA,QAAIJ,QAAJ,EAAc;AACdE,MAAAA,MAAM,GAAGH,QAAQ,CAACI,KAAT,CAAeD,MAAxB;AACC,KAFD,MAEO;AACPH,MAAAA,QAAQ,CAACI,KAAT,CAAeD,MAAf,GAAwB,IAAxB;AACC;AAEJ,GAtBmB,CAwBpB;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFM,EAEJ,CAACC,MAAD,CAFI,CAAT,CAzBoB,CA8BpB;;AACET,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,GAAG,IAAT;AACD,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAKF,sBAEI;AAAA,2BAOI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAID,QAApB;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAApB;AAAwB,QAAA,SAAS,EAAIT;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAI,YAArB;AAAmC,QAAA,SAAS,EAAIC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBH;;GApDQO,a;UACUF,W;;;KADVE,a;AAsDT,eAAeA,aAAf","sourcesContent":["import SubForum from './SubForum'; //Board\r\nimport ThreadPage from './ThreadPage'; //CommentPage\r\nimport {useState, useEffect} from \"react\";\r\nimport {\r\n    Switch, \r\n    Route,\r\n    useLocation,\r\n    \r\n  } from 'react-router-dom';\r\nimport PostModal from './PostModal';\r\n  \r\n\r\n\r\nfunction RoutingSwitch(){\r\n    let location = useLocation();\r\n    const [postOpen, setPostOpen] = useState(false);\r\n    //console.log(location);    \r\n    let postId = null;\r\n\r\n\r\n    \r\n    if(location.state && location.state.postId){\r\n        location.pathname = '/';\r\n        postId = location.state.postId;\r\n    }\r\n    \r\n\r\n    if (location.state && location.state.postId) {\r\n        location.pathname = '/';\r\n        if (postOpen) {\r\n        postId = location.state.postId;\r\n        } else {\r\n        location.state.postId = null;\r\n        }\r\n\r\n    }\r\n\r\n    // If post is open we pass the post id\r\n    useEffect(() => {\r\n        setPostOpen(true);\r\n      }, [postId]);\r\n    \r\n\r\n    //If post is closed we want the post id to be null\r\n      useEffect(() => {\r\n        postId = null;\r\n      }, [postOpen]);\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n            {/* {postId && (\r\n                    <div>\r\n\r\n                        <PostModal id = {postId} open = {postOpen} onClickOut = {() => setPostOpen(false)}/>\r\n                    </div>\r\n                )} */}\r\n            <Switch location = {location}>\r\n                \r\n                <Route exact path = \"/\" component = {SubForum}/> \r\n                <Route exact path = {\"/posts/:id\"} component = {ThreadPage}/> \r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoutingSwitch;"]},"metadata":{},"sourceType":"module"}