{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport TimeAgo from 'timeago-react';\nimport { ChatAltIcon } from \"@heroicons/react/outline\";\nimport { useState } from 'react';\nimport CommentForm from './CommentForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [fetchedReplies, setFetchedReplies] = useState([]);\n  const comments = props.comments.filter(comment => props.parentId === comment.parentId);\n\n  function fetchReplies(parentId) {\n    axios.get('http://localhost:4000/comments/parent/' + parentId).then(response => {\n      setFetchedReplies(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: '',\n    children: comments.map(comment => {\n      const replies = comments.filter(reply => reply.parentId === comment.parentId);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'bg-theme_dark-highlight w-8 h-8 rounded-full my-auto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ' my-auto py-1 ml-1.5 text-theme_dark-alternateBright',\n            children: [\"Posted by \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-theme_dark\",\n              children: [comment.author, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n              datetime: comment.postedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-l-2 border-theme_dark-highlight mt-1 ml-4 p-3\",\n          children: [comment.body, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"flex\",\n              onClick: () => setShowCommentForm(comment._id),\n              children: [/*#__PURE__*/_jsxDEV(ChatAltIcon, {\n                className: \"mt-2 h-6 w-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"my-1 py-2 text-xs\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), comment._id === showCommentForm && /*#__PURE__*/_jsxDEV(CommentForm, {\n              showAuthor: false,\n              rootId: props.parentId,\n              onSubmit: () => {\n                setShowCommentForm(false);\n                fetchReplies(comment._id);\n              },\n              parentId: comment._id,\n              onCancel: e => setShowCommentForm(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(Comments, {\n              comments: replies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Comments, \"uwoDDj+78lqT4vcYZbv75DriXms=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/Comments.js"],"names":["TimeAgo","ChatAltIcon","useState","CommentForm","axios","Comments","props","showCommentForm","setShowCommentForm","fetchedReplies","setFetchedReplies","comments","filter","comment","parentId","fetchReplies","get","then","response","data","map","replies","reply","author","postedAt","body","_id","e","length"],"mappings":"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","sourcesContent":["import TimeAgo from 'timeago-react';\r\nimport { ChatAltIcon } from \"@heroicons/react/outline\";\r\nimport { useState } from 'react';\r\nimport CommentForm from './CommentForm';\r\nimport axios from 'axios';\r\n\r\nfunction Comments(props) {\r\n\r\n    const [showCommentForm, setShowCommentForm] = useState(false);\r\n    const [fetchedReplies, setFetchedReplies] = useState([]);\r\n    const comments = props.comments.filter(comment => props.parentId === comment.parentId);\r\n    \r\n    function fetchReplies(parentId){\r\n        axios.get('http://localhost:4000/comments/parent/' + parentId)\r\n            .then(response => {\r\n                setFetchedReplies(response.data);\r\n            });\r\n    }\r\n\r\n    return (\r\n      <div className = {''}>\r\n          {comments.map(comment =>{\r\n            const replies = comments.filter(reply => reply.parentId === comment.parentId );\r\n            return(\r\n\r\n\r\n                <div className = \"mb-2\">\r\n\r\n                    <div className = \"flex\">\r\n                        <div className = {'bg-theme_dark-highlight w-8 h-8 rounded-full my-auto'}/>\r\n                        <div className = {' my-auto py-1 ml-1.5 text-theme_dark-alternateBright'}>\r\n                            Posted by <span className = 'font-bold text-theme_dark'>{comment.author} </span> \r\n                            <TimeAgo datetime = {comment.postedAt}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className = \"border-l-2 border-theme_dark-highlight mt-1 ml-4 p-3\">\r\n                        {comment.body}\r\n                        <div>\r\n                            <button className = \"flex\" \r\n                                    onClick = {() => setShowCommentForm(comment._id)}\r\n                            >\r\n                                <ChatAltIcon className = \"mt-2 h-6 w-6\"/> \r\n                                <span className = \"my-1 py-2 text-xs\">Reply</span>\r\n                            </button>\r\n                            {\r\n                                comment._id === showCommentForm && (\r\n                                    <CommentForm \r\n                                                showAuthor = {false}\r\n                                                rootId = {props.parentId}\r\n                                                onSubmit = {() => {setShowCommentForm(false); fetchReplies(comment._id)}}\r\n                                                parentId = {comment._id} \r\n                                                onCancel = {e => setShowCommentForm(false)}\r\n                                    />\r\n                                )\r\n                            }\r\n                            {replies.length > 0 && (\r\n                                <Comments comments = {replies}/>\r\n                            )}\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                )\r\n            })}\r\n          \r\n\r\n          \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Comments;"]},"metadata":{},"sourceType":"module"}