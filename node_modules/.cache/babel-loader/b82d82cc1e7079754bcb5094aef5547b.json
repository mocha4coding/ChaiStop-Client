{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport Thread from \"./Thread\";\nimport CommentForm from \"./CommentForm\";\nimport RootCommentContext from \"./RootCommentContext\";\nimport { useState, useEffect, useContext } from 'react';\nimport Comments from \"./Comments\";\nimport axios from \"axios\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Comment(props) {\n  _s();\n\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]); // const [commentsTotals, setCommentsTotals] = useState(null);\n  // const [userVotes, setUserVotes] = useState(null);\n\n  const authModalContext = useContext(AuthModalContext);\n\n  function refreshComments() {\n    axios.get('http://localhost:4000/comments/root/' + props.id).then(response => {\n      setComments(response.data);\n    }).catch(error => {\n      if (error.response.status === 401) {\n        authModalContext.setShow('login');\n      }\n    });\n  }\n\n  ; // function refreshVotes(){\n  //     const commentsIds = [post._id, ...comments.map(c => c._id) ];\n  //     axios.post('http://localhost:4000/votes', {postsIds: commentsIds}, {withCredentials: true})\n  //         .then(response => {\n  //             setCommentsTotals(response.data.postsTotals);\n  //             setUserVotes(response.data.userVotes);\n  //         })\n  // }\n\n  useEffect(() => {\n    if (props.comment) {\n      setPost(props.post);\n    } else {\n      axios.get('http://localhost:4000/postthread/' + props.id).then(response => {\n        setPost(response.data);\n      });\n      refreshComments();\n    }\n  }, [props.id, props.comment]); // axios.get('http://localhost:4000/postthread/' + props.id)\n  // .then(response => {\n  //     setPost(response.data);\n  // });\n  // refreshComments();\n  // useEffect(() => {\n  //     refreshVotes();\n  // }, [comments.length]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [post && /*#__PURE__*/_jsxDEV(Thread, { ...post,\n      open: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this), !!post && !!post._id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-theme_dark-alternateBright my-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        onSubmit: () => refreshComments(),\n        rootId: post._id,\n        parentId: post._id,\n        showAuthor: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-theme_dark-alternateBright my-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(RootCommentContext.Provider, {\n        value: {\n          refreshComments\n        },\n        children: /*#__PURE__*/_jsxDEV(Comments, {\n          parentId: post._id,\n          rootId: post._id,\n          comments: comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comment, \"eD95IQB25zyihRIcWTs2V/FOKRg=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/Comment.js"],"names":["Thread","CommentForm","RootCommentContext","useState","useEffect","useContext","Comments","axios","AuthModalContext","Comment","props","post","setPost","comments","setComments","authModalContext","refreshComments","get","id","then","response","data","catch","error","status","setShow","comment","_id"],"mappings":"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","sourcesContent":["import Thread from \"./Thread\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport RootCommentContext from \"./RootCommentContext\";\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport Comments from \"./Comments\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nfunction Comment(props){\r\n\r\n    const [post, setPost] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n   // const [commentsTotals, setCommentsTotals] = useState(null);\r\n   // const [userVotes, setUserVotes] = useState(null);\r\n    const authModalContext = useContext(AuthModalContext);\r\n\r\n\r\n    function refreshComments(){\r\n        axios.get('http://localhost:4000/comments/root/' + props.id)\r\n        .then(response => {\r\n            setComments(response.data);\r\n          \r\n            \r\n        }).catch(error => {\r\n            if(error.response.status === 401){\r\n                authModalContext.setShow('login');\r\n            }\r\n        });\r\n       \r\n    };\r\n\r\n    // function refreshVotes(){\r\n    //     const commentsIds = [post._id, ...comments.map(c => c._id) ];\r\n    //     axios.post('http://localhost:4000/votes', {postsIds: commentsIds}, {withCredentials: true})\r\n    //         .then(response => {\r\n    //             setCommentsTotals(response.data.postsTotals);\r\n    //             setUserVotes(response.data.userVotes);\r\n    //         })\r\n\r\n    // }\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.comment){\r\n            setPost(props.post);\r\n        }\r\n        else{\r\n            axios.get('http://localhost:4000/postthread/' + props.id)\r\n            .then(response => {\r\n                setPost(response.data);\r\n                \r\n                \r\n            });\r\n    \r\n            refreshComments();\r\n        }\r\n       \r\n\r\n        \r\n       \r\n    },[props.id, props.comment]);\r\n\r\n\r\n\r\n    // axios.get('http://localhost:4000/postthread/' + props.id)\r\n    // .then(response => {\r\n    //     setPost(response.data);\r\n        \r\n        \r\n    // });\r\n\r\n    // refreshComments();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     refreshVotes();\r\n    // }, [comments.length]);\r\n    return(\r\n    \r\n    <div>\r\n        {post && (\r\n               <Thread {...post} open={true}/>\r\n                   \r\n           )}\r\n         {!!post && !!post._id && (\r\n                            <>\r\n                            <hr className = \"border-theme_dark-alternateBright my-4\"/>\r\n                            <CommentForm onSubmit = {() => refreshComments()}\r\n                                         rootId = {post._id} \r\n                                         parentId = {post._id}\r\n                                         showAuthor = {true}/>\r\n\r\n\r\n\r\n                            <hr className = \"border-theme_dark-alternateBright my-4\"/>\r\n                            {/* <RootCommentContext.Provider value = {{refreshComments, refreshVotes, commentsTotals,userVotes}}> */}\r\n                            <RootCommentContext.Provider value = {{refreshComments}}>\r\n                                <Comments parentId = {post._id} \r\n                                          rootId = {post._id} \r\n                                          comments={comments} />\r\n                            </RootCommentContext.Provider>\r\n\r\n                            </>\r\n                        )\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}