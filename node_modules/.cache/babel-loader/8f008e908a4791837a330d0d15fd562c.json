{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\CreateThreadModal.js\",\n    _s = $RefreshSig$();\n\n//PostFormModal\n//Modal To create threads in a subforum\nimport ClickOutHandler from \"react-clickout-handler\";\nimport AuthButton from \"./AuthButton\";\nimport ThreadTextEditor from \"./ThreadTextEditor\";\nimport { useState, useContext } from 'react';\nimport CreateThreadModalContext from \"./CreateThreadModalContext\";\nimport { Redirect } from 'react-router-dom';\nimport { XIcon } from '@heroicons/react/outline';\nimport axios from \"axios\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateThreadModal() {\n  _s();\n\n  const modalContext = useContext(CreateThreadModalContext);\n  const authModalContext = useContext(AuthModalContext);\n  const visibleClass = modalContext.show !== false ? 'block' : 'hidden';\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [newPostId, setNewPostId] = useState(null); //triggered when post button is hit. The contents of the thread are saved into database.\n\n  function createThread() {\n    const data = {\n      title,\n      body\n    };\n    axios.post('http://localhost:4000/postthread', data, {\n      withCredentials: true\n    }).then(response => {\n      setNewPostId(response.data._id);\n    }).catch(error => {\n      if (error.response.status === 401) {\n        authModalContext.setShow('login');\n      }\n    });\n  }\n\n  if (newPostId) {\n    //return (<Redirect to = {'/posts/' + newPostId} />);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/' + newPostId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen h-screen fixed top-0 bottom-0 left-0 z-10 flex \" + visibleClass,\n      style: {\n        backgroundColor: 'rgba(0,0,0,0.8)'\n      },\n      children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n        onClickOut: () => {},\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4/5 md:w-2/4  border border-theme_dark rounded-md bg-white p-5 text-theme_dark  mx-auto self-center align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'text-right',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                modalContext.setShow(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(XIcon, {\n                solid: true,\n                className: 'bg-theme_dark-highlight border border-theme_dark-highlight rounded-md text-theme_dark h-7 w-7 align-right'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl mb-3\",\n            children: \"Create a post:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border-2  w-full border-theme_dark-brighter rounded-md p-2 my-2 block \",\n            placeholder: 'Thread Title',\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTextEditor, {\n            value: body,\n            onChange: e => setBody(e.target.value),\n            placeholder: 'Thread Contents(required)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'text-right',\n            children: [/*#__PURE__*/_jsxDEV(AuthButton, {\n              outline: true,\n              className: 'mr-1',\n              onClick: () => {\n                modalContext.setShow(false);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n              onClick: () => createThread(),\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateThreadModal, \"q0VYUge9481X5NOf9sSavehUnoc=\");\n\n_c = CreateThreadModal;\nexport default CreateThreadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateThreadModal\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/CreateThreadModal.js"],"names":["ClickOutHandler","AuthButton","ThreadTextEditor","useState","useContext","CreateThreadModalContext","Redirect","XIcon","axios","AuthModalContext","CreateThreadModal","modalContext","authModalContext","visibleClass","show","title","setTitle","body","setBody","newPostId","setNewPostId","createThread","data","post","withCredentials","then","response","_id","catch","error","status","setShow","backgroundColor","e","target","value"],"mappings":"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","sourcesContent":["//PostFormModal\r\n\r\n//Modal To create threads in a subforum\r\n\r\n\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport AuthButton from \"./AuthButton\";\r\nimport ThreadTextEditor from \"./ThreadTextEditor\";\r\n\r\nimport {useState, useContext} from 'react';\r\nimport CreateThreadModalContext from \"./CreateThreadModalContext\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nimport {XIcon} from '@heroicons/react/outline';\r\nimport axios from \"axios\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\n\r\nfunction CreateThreadModal(){\r\n\r\n    const modalContext = useContext(CreateThreadModalContext);\r\n    const authModalContext = useContext(AuthModalContext);\r\n\r\n\r\n    const visibleClass =  modalContext.show !== false ? 'block' : 'hidden';\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [newPostId, setNewPostId] = useState(null);\r\n\r\n    //triggered when post button is hit. The contents of the thread are saved into database.\r\n    function createThread(){\r\n        const data = {title, body};\r\n        axios.post('http://localhost:4000/postthread', data, {withCredentials : true})\r\n            .then(response => {\r\n               \r\n                setNewPostId(response.data._id);\r\n            })\r\n            .catch(error => {\r\n                if(error.response.status === 401){\r\n                    authModalContext.setShow('login');\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    if(newPostId){\r\n        //return (<Redirect to = {'/posts/' + newPostId} />);\r\n        return (<Redirect to = {'/' + newPostId} />);\r\n    }\r\n    return(\r\n        <div>\r\n             <div className = {\"w-screen h-screen fixed top-0 bottom-0 left-0 z-10 flex \" + visibleClass} style = {{backgroundColor:'rgba(0,0,0,0.8)'}}>\r\n             <ClickOutHandler onClickOut={() => {}}>\r\n             {/* <ClickOutHandler onClickOut={() => {modalContext.setShow(false)}}> */}\r\n\r\n                \r\n                    <div className = \"w-4/5 md:w-2/4  border border-theme_dark rounded-md bg-white p-5 text-theme_dark  mx-auto self-center align-middle\">\r\n\r\n\r\n                        <div className = {'text-right'}>\r\n                            <button onClick={() => {modalContext.setShow(false)}}>\r\n                          \r\n                                <XIcon solid className = {'bg-theme_dark-highlight border border-theme_dark-highlight rounded-md text-theme_dark h-7 w-7 align-right'}/>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <h1 className = \"text-2xl mb-3\" >Create a post:</h1>\r\n                        <input \r\n                            className = {\"border-2  w-full border-theme_dark-brighter rounded-md p-2 my-2 block \"} \r\n                            placeholder = {'Thread Title'} \r\n                            value = {title}\r\n                            onChange = {e => setTitle(e.target.value)}\r\n                        />\r\n\r\n                        <ThreadTextEditor \r\n                            value = {body}\r\n                            onChange = {e => setBody(e.target.value)}\r\n                            placeholder = {'Thread Contents(required)'}\r\n                        />\r\n\r\n                        <div className = {'text-right'}>\r\n                            \r\n                            <AuthButton outline className = {'mr-1'} \r\n                                        onClick={() => {modalContext.setShow(false)}}\r\n                            >\r\n                                Cancel\r\n                            </AuthButton>\r\n\r\n                            \r\n                            <AuthButton\r\n                                onClick = {() => createThread()}\r\n                            >\r\n                                Post\r\n                            </AuthButton>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </ClickOutHandler>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateThreadModal;"]},"metadata":{},"sourceType":"module"}