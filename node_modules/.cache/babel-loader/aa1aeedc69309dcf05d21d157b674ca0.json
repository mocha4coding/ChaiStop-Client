{"ast":null,"code":"import _slicedToArray from\"E:/ENGAGE/practice/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import SubForum from'./SubForum';//Board\nimport ThreadPage from'./ThreadPage';//CommentPage\nimport UserProfile from'./UserProfile';//user profile page\nimport{useState,useEffect}from\"react\";import{Switch,Route,useLocation}from'react-router-dom';import PostModal from'./PostModal';import SavedPosts from'./SavedPosts';import HomePage from'./HomePage';import MyPosts from'./MyPosts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RoutingSwitch(){var location=useLocation();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),postOpen=_useState2[0],setPostOpen=_useState2[1];//console.log(location);    \nvar postId=null;if(location.state&&location.state.postId){location.pathname='/';postId=location.state.postId;}if(location.state&&location.state.postId){location.pathname='/';if(postOpen){postId=location.state.postId;}else{location.state.postId=null;}}// If post is open we pass the post id\nuseEffect(function(){setPostOpen(true);},[postId]);//If post is closed we want the post id to be null\nuseEffect(function(){postId=null;},[postOpen]);return/*#__PURE__*/_jsxs(\"div\",{children:[postId&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(PostModal,{id:postId,open:postOpen,onClickOut:function onClickOut(){return setPostOpen(false);}})}),/*#__PURE__*/_jsxs(Switch,{location:location,children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:SubForum}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/home\",component:HomePage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/posts/:id\",component:ThreadPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile/:username\",component:UserProfile}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/bookmarks/:username\",component:SavedPosts}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/myposts/:username\",component:MyPosts})]})]});}export default RoutingSwitch;","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/RoutingSwitch.js"],"names":["SubForum","ThreadPage","UserProfile","useState","useEffect","Switch","Route","useLocation","PostModal","SavedPosts","HomePage","MyPosts","RoutingSwitch","location","postOpen","setPostOpen","postId","state","pathname"],"mappings":"gJAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CAAmC;AACnC,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAAuC;AACvC,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAAwC;AACxC,OAAQC,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,OACIC,MADJ,CAEIC,KAFJ,CAGIC,WAHJ,KAKS,kBALT,CAMA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,aAAT,EAAwB,CACpB,GAAIC,CAAAA,QAAQ,CAAGN,WAAW,EAA1B,CACA,cAAgCJ,QAAQ,CAAC,KAAD,CAAxC,wCAAOW,QAAP,eAAiBC,WAAjB,eACA;AACA,GAAIC,CAAAA,MAAM,CAAG,IAAb,CAIA,GAAGH,QAAQ,CAACI,KAAT,EAAkBJ,QAAQ,CAACI,KAAT,CAAeD,MAApC,CAA2C,CACvCH,QAAQ,CAACK,QAAT,CAAoB,GAApB,CACAF,MAAM,CAAGH,QAAQ,CAACI,KAAT,CAAeD,MAAxB,CACH,CAGD,GAAIH,QAAQ,CAACI,KAAT,EAAkBJ,QAAQ,CAACI,KAAT,CAAeD,MAArC,CAA6C,CACzCH,QAAQ,CAACK,QAAT,CAAoB,GAApB,CACA,GAAIJ,QAAJ,CAAc,CACdE,MAAM,CAAGH,QAAQ,CAACI,KAAT,CAAeD,MAAxB,CACC,CAFD,IAEO,CACPH,QAAQ,CAACI,KAAT,CAAeD,MAAf,CAAwB,IAAxB,CACC,CAEJ,CAED;AACAZ,SAAS,CAAC,UAAM,CACZW,WAAW,CAAC,IAAD,CAAX,CACD,CAFM,CAEJ,CAACC,MAAD,CAFI,CAAT,CAKA;AACEZ,SAAS,CAAC,UAAM,CACdY,MAAM,CAAG,IAAT,CACD,CAFQ,CAEN,CAACF,QAAD,CAFM,CAAT,CAKF,mBAEI,uBACKE,MAAM,eACC,kCAEI,KAAC,SAAD,EAAW,EAAE,CAAIA,MAAjB,CAAyB,IAAI,CAAIF,QAAjC,CAA2C,UAAU,CAAI,4BAAMC,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAAzD,EAFJ,EAFZ,cAOI,MAAC,MAAD,EAAQ,QAAQ,CAAIF,QAApB,wBAEI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,GAApB,CAAwB,SAAS,CAAGb,QAApC,EAFJ,cAGI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,OAApB,CAA4B,SAAS,CAAIU,QAAzC,EAHJ,cAII,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAI,YAArB,CAAmC,SAAS,CAAIT,UAAhD,EAJJ,cAKI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAI,oBAArB,CAA2C,SAAS,CAAIC,WAAxD,EALJ,cAOI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAI,sBAArB,CAA6C,SAAS,CAAIO,UAA1D,EAPJ,cAQI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAI,oBAArB,CAA2C,SAAS,CAAIE,OAAxD,EARJ,GAPJ,GAFJ,CAqBH,CAED,cAAeC,CAAAA,aAAf","sourcesContent":["import SubForum from './SubForum'; //Board\r\nimport ThreadPage from './ThreadPage'; //CommentPage\r\nimport UserProfile from './UserProfile';//user profile page\r\nimport {useState, useEffect} from \"react\";\r\nimport {\r\n    Switch, \r\n    Route,\r\n    useLocation,\r\n    \r\n  } from 'react-router-dom';\r\nimport PostModal from './PostModal';\r\nimport SavedPosts from './SavedPosts';\r\n\r\nimport HomePage from './HomePage';\r\nimport MyPosts from './MyPosts';\r\n\r\nfunction RoutingSwitch(){\r\n    let location = useLocation();\r\n    const [postOpen, setPostOpen] = useState(false);\r\n    //console.log(location);    \r\n    let postId = null;\r\n\r\n\r\n    \r\n    if(location.state && location.state.postId){\r\n        location.pathname = '/';\r\n        postId = location.state.postId;\r\n    }\r\n    \r\n\r\n    if (location.state && location.state.postId) {\r\n        location.pathname = '/';\r\n        if (postOpen) {\r\n        postId = location.state.postId;\r\n        } else {\r\n        location.state.postId = null;\r\n        }\r\n\r\n    }\r\n\r\n    // If post is open we pass the post id\r\n    useEffect(() => {\r\n        setPostOpen(true);\r\n      }, [postId]);\r\n    \r\n\r\n    //If post is closed we want the post id to be null\r\n      useEffect(() => {\r\n        postId = null;\r\n      }, [postOpen]);\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n            {postId && (\r\n                    <div>\r\n\r\n                        <PostModal id = {postId} open = {postOpen} onClickOut = {() => setPostOpen(false)}/>\r\n                    </div>\r\n                )}\r\n            <Switch location = {location}>\r\n                \r\n                <Route exact path = \"/\" component ={SubForum} /> \r\n                <Route exact path = \"/home\" component = {HomePage}/> \r\n                <Route exact path = {\"/posts/:id\"} component = {ThreadPage}/> \r\n                <Route exact path = {\"/profile/:username\"} component = {UserProfile}/> \r\n             \r\n                <Route exact path = {\"/bookmarks/:username\"} component = {SavedPosts}/>\r\n                <Route exact path = {\"/myposts/:username\"} component = {MyPosts}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoutingSwitch;"]},"metadata":{},"sourceType":"module"}