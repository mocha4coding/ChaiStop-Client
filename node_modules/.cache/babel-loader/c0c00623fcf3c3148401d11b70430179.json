{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENGAGE\\\\practice\\\\client\\\\src\\\\Voting.js\",\n    _s = $RefreshSig$();\n\nimport { ArrowCircleDownIcon, ArrowCircleUpIcon } from \"@heroicons/react/solid\";\nimport axios from \"axios\";\nimport { useContext } from 'react';\nimport RootCommentContext from \"./RootCommentContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Voting(props) {\n  _s();\n\n  const rootCommentInfo = useContext(RootCommentContext);\n  const {\n    postsTotals,\n    userVotes\n  } = rootCommentInfo;\n  const {\n    postId\n  } = props; //console.log(rootCommentInfo);\n\n  const total = postsTotals && postId in postsTotals ? postsTotals[postId] : 0;\n  const userVote = userVotes && postId in userVotes ? userVotes[postId] : 0;\n  const buttonClassName = \"mt-2 mx-1 h-6 w-6 bg-theme_dark text-theme_dark-brighter rounded-full hover:text-theme_dark-highlight\";\n\n  function sendVote() {\n    let direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'up';\n    const directionNumber = direction === 'up' ? 1 : -1;\n\n    if (directionNumber === userVote) {\n      direction = 'unvote';\n    }\n\n    const url = 'http://localhost:4000/vote/' + props.postId + '/' + direction;\n    axios.get(url, {\n      withCredentials: true\n    }).then(() => {\n      rootCommentInfo.refreshVotes();\n    });\n  }\n\n  function handleVoteUp() {\n    sendVote('up');\n  }\n\n  function handleVoteDown() {\n    sendVote('down');\n  }\n\n  function arrowButton() {\n    let directionName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'up';\n    const directionNumber = directionName === 'up' ? 1 : -1;\n    let classNames = 'inline-block h-5 relative top-1 ';\n\n    if (directionNumber === userVote) {\n      classNames += ' text-reddit_red';\n    } else {\n      classNames += ' text-reddit_text-darker hover:text-white';\n    }\n\n    if (directionName === 'up') {\n      return (\n        /*#__PURE__*/\n        //  {/* Upvote */}\n        _jsxDEV(ArrowCircleUpIcon, {\n          className: buttonClassName,\n          onClick: () => handleVoteUp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      );\n    } else {\n      return (\n        /*#__PURE__*/\n        //  {/* DownVote */}\n        _jsxDEV(ArrowCircleDownIcon, {\n          className: buttonClassName,\n          onClick: () => handleVoteDown()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      );\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'inline flex ',\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'my-1 py-2 text-xs font-bold',\n      children: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Voting, \"AExTUkOxZcor29gj1+J1Gq62MKE=\");\n\n_c = Voting;\nexport default Voting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Voting\");","map":{"version":3,"sources":["E:/ENGAGE/practice/client/src/Voting.js"],"names":["ArrowCircleDownIcon","ArrowCircleUpIcon","axios","useContext","RootCommentContext","Voting","props","rootCommentInfo","postsTotals","userVotes","postId","total","userVote","buttonClassName","sendVote","direction","directionNumber","url","get","withCredentials","then","refreshVotes","handleVoteUp","handleVoteDown","arrowButton","directionName","classNames"],"mappings":";;;AACA,SAASA,mBAAT,EAA8BC,iBAA9B,QAAuD,wBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EACA;AAAA;;AAEI,QAAMC,eAAe,GAAGJ,UAAU,CAACC,kBAAD,CAAlC;AACA,QAAM;AAACI,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA2BF,eAAjC;AACA,QAAM;AAACG,IAAAA;AAAD,MAAWJ,KAAjB,CAJJ,CAKI;;AAEA,QAAMK,KAAK,GAAGH,WAAW,IAAIE,MAAM,IAAIF,WAAzB,GACZA,WAAW,CAACE,MAAD,CADC,GAEZ,CAFF;AAIA,QAAME,QAAQ,GAAGH,SAAS,IAAIC,MAAM,IAAID,SAAvB,GACfA,SAAS,CAACC,MAAD,CADM,GAEf,CAFF;AAIA,QAAMG,eAAe,GAAI,uGAAzB;;AAGA,WAASC,QAAT,GAAmC;AAAA,QAAjBC,SAAiB,uEAAL,IAAK;AAG/B,UAAMC,eAAe,GAAGD,SAAS,KAAK,IAAd,GAAqB,CAArB,GAAyB,CAAC,CAAlD;;AACA,QAAIC,eAAe,KAAKJ,QAAxB,EAAkC;AAChCG,MAAAA,SAAS,GAAG,QAAZ;AACD;;AACD,UAAME,GAAG,GAAG,gCAAgCX,KAAK,CAACI,MAAtC,GAA+C,GAA/C,GAAqDK,SAAjE;AACAb,IAAAA,KAAK,CAACgB,GAAN,CAAUD,GAAV,EAAe;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAAf,EACKC,IADL,CACU,MAAM;AACRb,MAAAA,eAAe,CAACc,YAAhB;AACD,KAHP;AAIH;;AACD,WAASC,YAAT,GAAuB;AACnBR,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,WAASS,cAAT,GAAyB;AACrBT,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACH;;AAID,WAASU,WAAT,GAA2C;AAAA,QAAtBC,aAAsB,uEAAN,IAAM;AACvC,UAAMT,eAAe,GAAGS,aAAa,KAAK,IAAlB,GAAyB,CAAzB,GAA6B,CAAC,CAAtD;AACA,QAAIC,UAAU,GAAG,kCAAjB;;AAEA,QAAIV,eAAe,KAAKJ,QAAxB,EAAkC;AAChCc,MAAAA,UAAU,IAAI,kBAAd;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,IAAI,2CAAd;AACD;;AAED,QAAID,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AAAA;AAEE;AACI,gBAAC,iBAAD;AAAmB,UAAA,SAAS,EAAGZ,eAA/B;AACA,UAAA,OAAO,EAAI,MAAMS,YAAY;AAD7B;AAAA;AAAA;AAAA;AAAA;AAHN;AAOD,KARD,MAQO;AACL;AAAA;AACU;AACJ,gBAAC,mBAAD;AAAqB,UAAA,SAAS,EAAIT,eAAlC;AACA,UAAA,OAAO,EAAI,MAAMU,cAAc;AAD/B;AAAA;AAAA;AAAA;AAAA;AAFN;AAKD;AACF;;AAGH,sBACA;AAAK,IAAA,SAAS,EAAI,cAAlB;AAAA,2BAKI;AAAM,MAAA,SAAS,EAAI,6BAAnB;AAAA,gBAAmDZ;AAAnD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYH;;GAjFQN,M;;KAAAA,M;AAmFT,eAAeA,MAAf","sourcesContent":["\r\nimport { ArrowCircleDownIcon, ArrowCircleUpIcon } from \"@heroicons/react/solid\";\r\nimport axios from \"axios\";\r\nimport {useContext} from 'react';\r\nimport RootCommentContext from \"./RootCommentContext\";\r\n\r\nfunction Voting(props)\r\n{\r\n\r\n    const rootCommentInfo = useContext(RootCommentContext);\r\n    const {postsTotals, userVotes} = rootCommentInfo;\r\n    const {postId} = props;\r\n    //console.log(rootCommentInfo);\r\n\r\n    const total = postsTotals && postId in postsTotals\r\n    ? postsTotals[postId]\r\n    : 0;\r\n\r\n    const userVote = userVotes && postId in userVotes\r\n    ? userVotes[postId]\r\n    : 0;\r\n\r\n    const buttonClassName =  \"mt-2 mx-1 h-6 w-6 bg-theme_dark text-theme_dark-brighter rounded-full hover:text-theme_dark-highlight\";\r\n\r\n\r\n    function sendVote(direction = 'up'){\r\n\r\n\r\n        const directionNumber = direction === 'up' ? 1 : -1;\r\n        if (directionNumber === userVote) {\r\n          direction = 'unvote';\r\n        }\r\n        const url = 'http://localhost:4000/vote/' + props.postId + '/' + direction;\r\n        axios.get(url, {withCredentials:true})\r\n            .then(() => {\r\n                rootCommentInfo.refreshVotes();\r\n              })\r\n    }\r\n    function handleVoteUp(){\r\n        sendVote('up');\r\n    }\r\n    function handleVoteDown(){\r\n        sendVote('down');\r\n    }\r\n\r\n\r\n\r\n    function arrowButton(directionName = 'up') {\r\n        const directionNumber = directionName === 'up' ? 1 : -1;\r\n        let classNames = 'inline-block h-5 relative top-1 ';\r\n    \r\n        if (directionNumber === userVote) {\r\n          classNames += ' text-reddit_red';\r\n        } else {\r\n          classNames += ' text-reddit_text-darker hover:text-white';\r\n        }\r\n    \r\n        if (directionName === 'up') {\r\n          return (\r\n\r\n            //  {/* Upvote */}\r\n                <ArrowCircleUpIcon className ={buttonClassName}\r\n                onClick = {() => handleVoteUp()}/>\r\n           \r\n          );\r\n        } else {\r\n          return (\r\n                    //  {/* DownVote */}\r\n                <ArrowCircleDownIcon className = {buttonClassName}\r\n                onClick = {() => handleVoteDown()}/>\r\n          );\r\n        }\r\n      }\r\n\r\n\r\n    return(\r\n    <div className = {'inline flex ' }>\r\n       \r\n       \r\n\r\n        {/* Number of Votes */}\r\n        <span className = {'my-1 py-2 text-xs font-bold'}>{total}</span>\r\n\r\n\r\n       \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Voting;"]},"metadata":{},"sourceType":"module"}